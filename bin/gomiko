#! /usr/bin/env ruby

require 'thor'
require 'gomiko'
require 'pp'

class MyCommand < Thor
  #def initialize
  #  @gomiko = Gomiko.new
  #end

  desc :rm, 'Throw files into trash directory'
  #option :dry_run,
  #  desc: "Dry run, not extcute.",
  #  type: :boolean,
  #  default: false
  def rm(* paths)
    Gomiko.new.throw(paths: paths)
  end

  desc :empty, 'Remove files in trash directory'
  option "before", type: :numeric,
    default: 0
  option "quiet", type: :boolean,
    default: false
  #def empty(* dirs)
  def empty
    #Gomiko.new.empty(dirs,
    Gomiko.new.empty(
                     before: options[:before],
                     verbose: ! options[:quiet])
  end

  desc :undo, 'Undo removed files from trash directory'
  def undo(* dirs)
    g = Gomiko.new

    if Dir.glob("#{@trashdir}/*").empty?
      puts "Nothing to undo in #{@trashdir}"
      exit
    end

    dirs = [g.list[-1]] if dirs.empty?
    dirs.each { |dir| g.undo(dir) }
  end

  desc :ls, 'Show trash directory'
  def ls
    g = Gomiko.new
    #pp g.list; exit
    results = [['size', 'date-time ID', 'original paths[ ...]']]
    results += g.list.map do |id|
      g.info(id)
    end
    if results.size > 1
      Tefil::ColumnFormer.new.form(results)
    else
      puts "Nothing in ~/.trash"
    end
  end

end
MyCommand.start(ARGV)

